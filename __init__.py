"""
weatherlearn Package
====================

This package provides tools and modules for training machine learning models, specifically an adapted version of the 
Pangu-Weather model, for weather prediction and radar data analysis. The package is designed to be compatible with 
High-Performance Computing (HPC) environments, including HEC and Bede, and supports logging and tracking of runs 
using Weights & Biases (W&B).

Key Features
------------

1. **Adapted Pangu Model**:
   - Implements the Pangu-Weather model, optimized for weather prediction tasks.
   - Includes custom layers and attention mechanisms for handling radar and weather data.

2. **HPC Compatibility**:
   - Fully compatible with HEC and Bede HPC environments.
   - Includes SLURM integration for job scheduling and resource management.
   - Supports distributed training across multiple GPUs or nodes.

3. **Logging with Weights & Biases (W&B)**:
   - Tracks training metrics, hyperparameters, and model checkpoints.
   - Enables easy visualization and comparison of experiments.

Modules
-------

- **PTL**:
  - Contains PyTorch Lightning-based modules for data handling, model training, and evaluation.
  - Includes utilities for hyperparameter optimization and SLURM integration.

- **storageServer**:
  - Provides tools for managing data storage, including interactions with MinIO for object storage.

How to Use
----------

1. **Set Up the Environment**:
   - Install the required dependencies from the `requirements.txt` file:

     .. code-block:: bash

        pip install -r requirements.txt

2. **Run Training**:
   - Use the `launch.py` script in the `PTL` module to start training:

     .. code-block:: bash

        python launch.py --batch_size 16 --learning_rate 1e-4 --accelerator gpu

3. **HPC Integration**:
   - Submit jobs to HEC or Bede using SLURM scripts generated by the `SlurmRun` function in `launch.py`.

4. **Log Experiments**:
   - Enable W&B logging by providing your W&B API key and specifying the project name:

     .. code-block:: bash

        wandb login
        python launch.py --logtool wandb --project weatherlearn

Tutorials and Documentation
----------------------------

For detailed tutorials and examples, refer to the README files in the `PTL` and `storageServer` modules.

Acknowledgements
----------------

This package builds upon the Pangu-Weather model and integrates modern tools like PyTorch Lightning, MinIO, and Weights & Biases for efficient and scalable machine learning workflows.
"""
# from .PTL.DataModule import DatasetFromMinioBucket, DatasetFromPresaved
# from .PTL.generateFitToConv import process_fitacf_to_filelists, find_conv_maps_from_filelists

# from .PTL.launch import train, wandbtrain, neptunetrain, SlurmRun
# from .PTL.model import Pangu, DropPath, EarthSpecificBlock
# from .PTL.model import norm_cdf, EarthAttention3D
# from .PTL.utils import (
#     UpSample,
#     DownSample,
#     crop2d,
#     crop3d,
#     Crop3D,
#     get_pad3d,
#     get_pad2d,
#     PatchEmbed2D,
#     PatchEmbed3D,
#     PatchRecovery2D,
#     PatchRecovery3D,
#     window_partition,
#     WindowPartition,
#     window_reverse,
#     WindowReverse,
#     get_shift_window_mask,
#     get_earth_position_index,
# )

